<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youran.generate.dao.MetaProjectDAO">

    <select id="findById" resultType="MetaProjectPO">
        select * from meta_project
        where deleted = 0
        and project_id = #{projectId,jdbcType=INTEGER}
    </select>

    <select id="exist" resultType="boolean">
        select count(*) from meta_project
        where deleted = 0
        and project_id = #{projectId,jdbcType=INTEGER}
    </select>

    <insert id="_save" useGeneratedKeys="true" keyProperty="projectId" parameterType="MetaProjectPO">
        insert into meta_project (
          project_id, package_name, project_name, project_desc, group_id,
          author,remote,remote_url,username,
          `password`,last_history_id,project_version,feature,
          created_time, created_by,
          operated_time, operated_by, deleted,
          version)
        values (#{projectId,jdbcType=INTEGER}, #{packageName,jdbcType=VARCHAR}, #{projectName,jdbcType=VARCHAR},
          #{projectDesc,jdbcType=VARCHAR}, #{groupId,jdbcType=VARCHAR},
          #{author,jdbcType=VARCHAR},#{remote,jdbcType=INTEGER},#{remoteUrl,jdbcType=VARCHAR},#{username,jdbcType=VARCHAR},
          #{password,jdbcType=VARCHAR},#{lastHistoryId,jdbcType=INTEGER},#{projectVersion,jdbcType=INTEGER},
          #{feature,jdbcType=VARCHAR},
          #{createdTime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR},
          #{operatedTime,jdbcType=TIMESTAMP}, #{operatedBy,jdbcType=VARCHAR}, #{deleted,jdbcType=SMALLINT},
          #{version,jdbcType=INTEGER})
    </insert>

    <update id="_update" parameterType="MetaProjectPO">
        update meta_project
        set
            package_name = #{packageName,jdbcType=VARCHAR},
            project_name = #{projectName,jdbcType=VARCHAR},
            project_desc = #{projectDesc,jdbcType=VARCHAR},
            group_id = #{groupId,jdbcType=VARCHAR},
            author = #{author,jdbcType=VARCHAR},
            remote = #{remote,jdbcType=INTEGER},
            remote_url = #{remoteUrl,jdbcType=VARCHAR},
            username = #{username,jdbcType=VARCHAR},
            `password` = #{password,jdbcType=VARCHAR},
            last_history_id = #{lastHistoryId,jdbcType=INTEGER},
            project_version = #{projectVersion,jdbcType=INTEGER},
            feature = #{feature,jdbcType=VARCHAR},
            operated_time = #{operatedTime,jdbcType=TIMESTAMP},
            operated_by = #{operatedBy,jdbcType=VARCHAR},
            version = #{version,jdbcType=INTEGER}
        where project_id = #{projectId,jdbcType=INTEGER}
        and version=#{version,jdbcType=INTEGER}
        and deleted = 0
    </update>

    <delete id="delete">
        update meta_project set
        deleted = 1
        where project_id = #{projectId,jdbcType=INTEGER}
        and deleted = 0
    </delete>

    <select id="findListByQuery" parameterType="MetaProjectQO" resultType="MetaProjectListVO">
        select * from meta_project t
        where t.deleted = 0
        order by t.created_time
    </select>
</mapper>
